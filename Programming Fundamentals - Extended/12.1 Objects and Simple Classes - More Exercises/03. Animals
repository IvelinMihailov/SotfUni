using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Animal
{
    public class Dog
    {
        public string Name { get; set; }

        public string Age { get; set; }

        public int NumberOfLegs { get; set; }

        public void ProduceSound()
        {
            Console.WriteLine("I'm a Distinguishedog, and I will now produce a distinguished sound! Bau Bau.");
        }
    }

    public class Cat
    {
        public string Name { get; set; }

        public string Age { get; set; }

        public int IntelligenceQuotient { get; set; }

        public void ProduceSound()
        {
            Console.WriteLine("I'm an Aristocat, and I will now produce an aristocratic sound! Myau Myau.");
        }
    }

    public class Snake
    {
        public string Name { get; set; }

        public string Age { get; set; }

        public int CrueltyCoefficient { get; set; }

        public void ProduceSound()
        {
            Console.WriteLine("I'm a Sophistisnake, and I will now produce a sophisticated sound! Honey, I'm home.");
        }
    }

    class Animal
    {
        static void Main()
        {
            var input = Console.ReadLine();

            var dogs = new Dictionary<string, Dog>();
            var cats = new Dictionary<string, Cat>();
            var snakes = new Dictionary<string, Snake>();

            while (input != "I'm your Huckleberry")
            {
                var splitInput = input.Split();

                if (splitInput.Length == 4)
                {
                    var enimal = splitInput[0];

                    var name = splitInput[1];
                    var age = splitInput[2];
                    var parameter = int.Parse(splitInput[3]);

                    switch (enimal)
                    {
                        case "Dog":
                            var newDog = new Dog()
                            {
                                Name = name,
                                Age = age,
                                NumberOfLegs = parameter
                            };
                            dogs.Add(newDog.Name, newDog);
                            break;

                        case "Cat":
                            var newCat = new Cat()
                            {
                                Name = name,
                                Age = age,
                                IntelligenceQuotient = parameter
                            };
                            cats.Add(newCat.Name, newCat);
                            break;

                        case "Snake":
                            var newSnake = new Snake()
                            {
                                Name = name,
                                Age = age,
                                CrueltyCoefficient = parameter
                            };
                            snakes.Add(newSnake.Name, newSnake);
                            break;
                    }
                }
                else if (splitInput.Length == 2)
                {
                    var nameAnimal = splitInput[1];

                    if (cats.ContainsKey(nameAnimal))
                    {
                        cats[nameAnimal].ProduceSound();
                    }
                    else if (dogs.ContainsKey(nameAnimal))
                    {
                        dogs[nameAnimal].ProduceSound();
                    }
                    else if (snakes.ContainsKey(nameAnimal))
                    {
                        snakes[nameAnimal].ProduceSound();
                    }
                }

                input = Console.ReadLine();
            }

            foreach (var dog in dogs.Values)
            {
                Console.WriteLine($"Dog: {dog.Name}, Age: {dog.Age}, Number Of Legs: {dog.NumberOfLegs}");
            }

            foreach (var cat in cats.Values)
            {
                Console.WriteLine($"Cat: {cat.Name}, Age: {cat.Age}, IQ: {cat.IntelligenceQuotient}");
            }

            foreach (var snake in snakes.Values)
            {
                Console.WriteLine($"Snake: {snake.Name}, Age: {snake.Age}, Cruelty: {snake.CrueltyCoefficient}");
            }
        }
    }
}
